

def Prosfix(exprecao):
    esprecao = exprecao.replace(" ", "")
    i=0
    i= len(exprecao)
    operadores = {"+", "*", "-", "/","^", "(", ")"}
    operandores_procedencia = {"+":1, "-":2,"/":3, "*":4,".":5,"^":6, "(":10, ")":10}

    verificadoabre=0
    verificadoOp=0

    expre1 = 0
    expre2 = 0
    p=list()
    p2=list()


    j = 0
    while i>0:

       if exprecao[j] == "(":
         verificadoabre =verificadoabre + 1
       elif exprecao[j]== ")":
         verificadoabre =verificadoabre - 1
       i = i - 1
       j = j + 1


    if verificadoabre !=0:
       print("expressÃ£o com abre ( e ) fecha incoretos")
    else:
     prosfix = ""
     while len(exprecao) > 0:
         expre1 = exprecao

         agora = exprecao[0]
         exprecao = exprecao[1:]


         if agora in operadores:

             if agora == "(":
                 p.append(agora)

             elif agora == ")":
                 if len(p) > 0:
                     while len(p) > 0 and p[-1] != "(":
                         prosfix += p.pop()
                         if len(p) > 0 and p[-1] == "(":
                             p.pop()
                             print(prosfix)

             else:
                 while len(p) > 0 and operandores_procedencia[agora] <= operandores_procedencia[p[-1]] and p[
                     -1] not in {"(", ")"}:
                     prosfix += p.pop()
                 p.append(agora)
         else:

             prosfix += agora
             agora=0
             if expre1 == operadores:
                 while len(p) > 0 and p[-1] not in {
                     "(", ")"}:
                     prosfix += p.pop()


     while len(p) > 0:
         prosfix += p.pop()
         print(p)
     print(prosfix)


Prosfix("a+b")
